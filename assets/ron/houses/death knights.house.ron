#![enable(implicit_some)]
(
    name: "Death Knights",
    color: ("#658D1B"),
    defaults: {"Summon Skeleton": {M1: Int(0)}},
    statuses: [
        (
            name: "Plague",
            description: "Take {Charges} DMG every turn, [Summon Skeleton] after death",
            trigger: List(
                [
                    Fire(
                        triggers: [(TurnEnd, None)],
                        effects: [(WithTarget(Owner, WithOwner(Status, Damage(Context(Charges)))), None)],
                    ),
                    Fire(
                        triggers: [(BeforeDeath, None)],
                        effects: [(UseAbility("Summon Skeleton", 0), None)],
                    ),
                ],
            ),
        ),
        (
            name: "Decay",
            description: "-{Charges} HP",
            trigger: Change(trigger: Var(Hp), expr: Sub(Zero, Context(Charges))),
        ),
    ],
    abilities: [
        (
            name: "Plague",
            description: "Target takes {1} DMG every turn, [Summon Skeleton] after death",
            effect: AddStatus("Plague"),
        ),
        (
            name: "Summon Skeleton",
            description: "Summon unfriendly 1/4 unit {M1|, applies [Plague] on damage dealt}",
            effect: WithVar(Faction, OppositeFaction, Summon("Skeleton", None)),
        ),
        (name: "Decay", description: "Give -{1} HP", effect: AddStatus("Decay")),
    ],
    summons: [
        (
            name: "Skeleton",
            hp: 4,
            pwr: 1,
            stacks: 1,
            level: 1,
            houses: "Death Knights",
            trigger: Fire(
                triggers: [(AfterDamageDealt, None)],
                targets: [(Target, None)],
                effects: [(If(AbilityState("Summon Skeleton", M1), UseAbility("Plague", 0), Noop), None)],
            ),
            representation: (
                material: Shape(
                    shape: Rectangle(size: Vec2(0.05, 1.0)),
                    shape_type: Opaque,
                    fill: Solid(color: OwnerState(Color)),
                    alpha: Float(1.0),
                ),
                children: [],
                mapping: {
                    Offset: Mul(
                        UnitVec(
                            Mul(
                                Sub(
                                    RandomFloat(Sum(Index, Sum(Int(200), ToInt(GameTime)))),
                                    Float(0.5),
                                ),
                                Mul(PI, Float(2.0)),
                            ),
                        ),
                        Float(0.5),
                    ),
                    Rotation: Mul(
                        RandomFloat(
                            Sum(
                                Mul(Index, Int(10)),
                                Sum(Int(29), ToInt(Sum(GameTime, Mul(Index, Float(0.1))))),
                            ),
                        ),
                        Mul(PI, Float(2.0)),
                    ),
                },
                count: 12,
            ),
            state: (history: {}, birth: 0.0),
            statuses: [],
        ),
    ],
)