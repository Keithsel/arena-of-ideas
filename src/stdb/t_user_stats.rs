// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#![allow(unused_imports)]
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address, ScheduleAt,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct TUserStats {
    pub id: u64,
    pub season: u32,
    pub owner: u64,
    pub time_played: u64,
    pub quests_completed: u32,
    pub credits_earned: u32,
}

impl TableType for TUserStats {
    const TABLE_NAME: &'static str = "TUserStats";
    type ReducerEvent = super::ReducerEvent;
}

impl TableWithPrimaryKey for TUserStats {
    type PrimaryKey = u64;
    fn primary_key(&self) -> &Self::PrimaryKey {
        &self.id
    }
}

impl TUserStats {
    #[allow(unused)]
    pub fn filter_by_id(id: u64) -> TableIter<Self> {
        Self::filter(|row| row.id == id)
    }
    #[allow(unused)]
    pub fn find_by_id(id: u64) -> Option<Self> {
        Self::find(|row| row.id == id)
    }
    #[allow(unused)]
    pub fn filter_by_season(season: u32) -> TableIter<Self> {
        Self::filter(|row| row.season == season)
    }
    #[allow(unused)]
    pub fn filter_by_owner(owner: u64) -> TableIter<Self> {
        Self::filter(|row| row.owner == owner)
    }
    #[allow(unused)]
    pub fn filter_by_time_played(time_played: u64) -> TableIter<Self> {
        Self::filter(|row| row.time_played == time_played)
    }
    #[allow(unused)]
    pub fn filter_by_quests_completed(quests_completed: u32) -> TableIter<Self> {
        Self::filter(|row| row.quests_completed == quests_completed)
    }
    #[allow(unused)]
    pub fn filter_by_credits_earned(credits_earned: u32) -> TableIter<Self> {
        Self::filter(|row| row.credits_earned == credits_earned)
    }
}
