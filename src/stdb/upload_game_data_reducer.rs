// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#![allow(unused_imports)]
use super::game_data::GameData;
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address, ScheduleAt,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct UploadGameDataArgs {
    pub next_id: u64,
    pub data: GameData,
}

impl Reducer for UploadGameDataArgs {
    const REDUCER_NAME: &'static str = "upload_game_data";
}

#[allow(unused)]
pub fn upload_game_data(next_id: u64, data: GameData) {
    UploadGameDataArgs { next_id, data }.invoke();
}

#[allow(unused)]
pub fn on_upload_game_data(
    mut __callback: impl FnMut(&Identity, Option<Address>, &Status, &u64, &GameData) + Send + 'static,
) -> ReducerCallbackId<UploadGameDataArgs> {
    UploadGameDataArgs::on_reducer(move |__identity, __addr, __status, __args| {
        let UploadGameDataArgs { next_id, data } = __args;
        __callback(__identity, __addr, __status, next_id, data);
    })
}

#[allow(unused)]
pub fn once_on_upload_game_data(
    __callback: impl FnOnce(&Identity, Option<Address>, &Status, &u64, &GameData) + Send + 'static,
) -> ReducerCallbackId<UploadGameDataArgs> {
    UploadGameDataArgs::once_on_reducer(move |__identity, __addr, __status, __args| {
        let UploadGameDataArgs { next_id, data } = __args;
        __callback(__identity, __addr, __status, next_id, data);
    })
}

#[allow(unused)]
pub fn remove_on_upload_game_data(id: ReducerCallbackId<UploadGameDataArgs>) {
    UploadGameDataArgs::remove_on_reducer(id);
}
