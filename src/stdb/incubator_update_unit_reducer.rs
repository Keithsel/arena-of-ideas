// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#![allow(unused_imports)]
use super::t_base_unit::TBaseUnit;
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address, ScheduleAt,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct IncubatorUpdateUnitArgs {
    pub unit: TBaseUnit,
    pub representation: String,
}

impl Reducer for IncubatorUpdateUnitArgs {
    const REDUCER_NAME: &'static str = "incubator_update_unit";
}

#[allow(unused)]
pub fn incubator_update_unit(unit: TBaseUnit, representation: String) {
    IncubatorUpdateUnitArgs {
        unit,
        representation,
    }
    .invoke();
}

#[allow(unused)]
pub fn on_incubator_update_unit(
    mut __callback: impl FnMut(&Identity, Option<Address>, &Status, &TBaseUnit, &String)
        + Send
        + 'static,
) -> ReducerCallbackId<IncubatorUpdateUnitArgs> {
    IncubatorUpdateUnitArgs::on_reducer(move |__identity, __addr, __status, __args| {
        let IncubatorUpdateUnitArgs {
            unit,
            representation,
        } = __args;
        __callback(__identity, __addr, __status, unit, representation);
    })
}

#[allow(unused)]
pub fn once_on_incubator_update_unit(
    __callback: impl FnOnce(&Identity, Option<Address>, &Status, &TBaseUnit, &String) + Send + 'static,
) -> ReducerCallbackId<IncubatorUpdateUnitArgs> {
    IncubatorUpdateUnitArgs::once_on_reducer(move |__identity, __addr, __status, __args| {
        let IncubatorUpdateUnitArgs {
            unit,
            representation,
        } = __args;
        __callback(__identity, __addr, __status, unit, representation);
    })
}

#[allow(unused)]
pub fn remove_on_incubator_update_unit(id: ReducerCallbackId<IncubatorUpdateUnitArgs>) {
    IncubatorUpdateUnitArgs::remove_on_reducer(id);
}
