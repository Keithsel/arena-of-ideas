// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#![allow(unused_imports)]use spacetimedb_sdk::{
	Address,
	sats::{ser::Serialize, de::Deserialize},
	table::{TableType, TableIter, TableWithPrimaryKey},
	reducer::{Reducer, ReducerCallbackId, Status},
	identity::Identity,
	spacetimedb_lib,
	anyhow::{Result, anyhow},
};
use super::global_settings::GlobalSettings;
use super::t_representation::TRepresentation;
use super::t_house::THouse;
use super::t_base_unit::TBaseUnit;
use super::t_status::TStatus;
use super::t_ability::TAbility;

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct UploadAssetsArgs {
	pub global_settings: GlobalSettings,
	pub representations: Vec::<TRepresentation>,
	pub base_units: Vec::<TBaseUnit>,
	pub houses: Vec::<THouse>,
	pub abilities: Vec::<TAbility>,
	pub statuses: Vec::<TStatus>,
}

impl Reducer for UploadAssetsArgs {
	const REDUCER_NAME: &'static str = "upload_assets";
}

#[allow(unused)]
pub fn upload_assets(
	global_settings: GlobalSettings,
	representations: Vec::<TRepresentation>,
	base_units: Vec::<TBaseUnit>,
	houses: Vec::<THouse>,
	abilities: Vec::<TAbility>,
	statuses: Vec::<TStatus>,
) {
		UploadAssetsArgs {
		global_settings,
		representations,
		base_units,
		houses,
		abilities,
		statuses,
}	.invoke();
}

#[allow(unused)]
pub fn on_upload_assets(mut __callback: impl FnMut(&Identity, Option<Address>, &Status, &GlobalSettings, &Vec::<TRepresentation>, &Vec::<TBaseUnit>, &Vec::<THouse>, &Vec::<TAbility>, &Vec::<TStatus>) + Send + 'static) -> ReducerCallbackId<UploadAssetsArgs> 
{
		UploadAssetsArgs::on_reducer(move |__identity, __addr, __status, __args| {
		let UploadAssetsArgs {
			global_settings,
			representations,
			base_units,
			houses,
			abilities,
			statuses,
}		 = __args;
__callback(
						__identity,
			__addr,
			__status,
			global_settings,
			representations,
			base_units,
			houses,
			abilities,
			statuses,
);
})
}

#[allow(unused)]
pub fn once_on_upload_assets(__callback: impl FnOnce(&Identity, Option<Address>, &Status, &GlobalSettings, &Vec::<TRepresentation>, &Vec::<TBaseUnit>, &Vec::<THouse>, &Vec::<TAbility>, &Vec::<TStatus>) + Send + 'static) -> ReducerCallbackId<UploadAssetsArgs> 
{
		UploadAssetsArgs::once_on_reducer(move |__identity, __addr, __status, __args| {
		let UploadAssetsArgs {
			global_settings,
			representations,
			base_units,
			houses,
			abilities,
			statuses,
}		 = __args;
__callback(
						__identity,
			__addr,
			__status,
			global_settings,
			representations,
			base_units,
			houses,
			abilities,
			statuses,
);
})
}

#[allow(unused)]
pub fn remove_on_upload_assets(id: ReducerCallbackId<UploadAssetsArgs>) {
	UploadAssetsArgs::remove_on_reducer(id);
}
