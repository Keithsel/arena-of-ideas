// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#![allow(unused_imports)]
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address, ScheduleAt,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct GlobalData {
    pub always_zero: u32,
    pub next_id: u64,
    pub game_version: String,
    pub last_sync: u64,
    pub initial_enemies: Vec<u64>,
}

impl TableType for GlobalData {
    const TABLE_NAME: &'static str = "GlobalData";
    type ReducerEvent = super::ReducerEvent;
}

impl GlobalData {
    #[allow(unused)]
    pub fn filter_by_always_zero(always_zero: u32) -> TableIter<Self> {
        Self::filter(|row| row.always_zero == always_zero)
    }
    #[allow(unused)]
    pub fn find_by_always_zero(always_zero: u32) -> Option<Self> {
        Self::find(|row| row.always_zero == always_zero)
    }
    #[allow(unused)]
    pub fn filter_by_next_id(next_id: u64) -> TableIter<Self> {
        Self::filter(|row| row.next_id == next_id)
    }
    #[allow(unused)]
    pub fn filter_by_game_version(game_version: String) -> TableIter<Self> {
        Self::filter(|row| row.game_version == game_version)
    }
    #[allow(unused)]
    pub fn filter_by_last_sync(last_sync: u64) -> TableIter<Self> {
        Self::filter(|row| row.last_sync == last_sync)
    }
}
