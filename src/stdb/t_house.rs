// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#![allow(unused_imports)]
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct THouse {
    pub name: String,
    pub color: String,
    pub abilities: Vec<String>,
    pub statuses: Vec<String>,
    pub summons: Vec<String>,
    pub defaults: String,
}

impl TableType for THouse {
    const TABLE_NAME: &'static str = "THouse";
    type ReducerEvent = super::ReducerEvent;
}

impl TableWithPrimaryKey for THouse {
    type PrimaryKey = String;
    fn primary_key(&self) -> &Self::PrimaryKey {
        &self.name
    }
}

impl THouse {
    #[allow(unused)]
    pub fn filter_by_name(name: String) -> Option<Self> {
        Self::find(|row| row.name == name)
    }
    #[allow(unused)]
    pub fn filter_by_color(color: String) -> TableIter<Self> {
        Self::filter(|row| row.color == color)
    }
    #[allow(unused)]
    pub fn filter_by_abilities(abilities: Vec<String>) -> TableIter<Self> {
        Self::filter(|row| row.abilities == abilities)
    }
    #[allow(unused)]
    pub fn filter_by_statuses(statuses: Vec<String>) -> TableIter<Self> {
        Self::filter(|row| row.statuses == statuses)
    }
    #[allow(unused)]
    pub fn filter_by_summons(summons: Vec<String>) -> TableIter<Self> {
        Self::filter(|row| row.summons == summons)
    }
    #[allow(unused)]
    pub fn filter_by_defaults(defaults: String) -> TableIter<Self> {
        Self::filter(|row| row.defaults == defaults)
    }
}
