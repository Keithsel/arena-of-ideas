// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#![allow(unused_imports)]
use super::battle_result::BattleResult;
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct TBattle {
    pub id: u64,
    pub owner: u64,
    pub team_left: u64,
    pub team_right: u64,
    pub result: BattleResult,
}

impl TableType for TBattle {
    const TABLE_NAME: &'static str = "TBattle";
    type ReducerEvent = super::ReducerEvent;
}

impl TableWithPrimaryKey for TBattle {
    type PrimaryKey = u64;
    fn primary_key(&self) -> &Self::PrimaryKey {
        &self.id
    }
}

impl TBattle {
    #[allow(unused)]
    pub fn filter_by_id(id: u64) -> Option<Self> {
        Self::find(|row| row.id == id)
    }
    #[allow(unused)]
    pub fn filter_by_owner(owner: u64) -> TableIter<Self> {
        Self::filter(|row| row.owner == owner)
    }
    #[allow(unused)]
    pub fn filter_by_team_left(team_left: u64) -> TableIter<Self> {
        Self::filter(|row| row.team_left == team_left)
    }
    #[allow(unused)]
    pub fn filter_by_team_right(team_right: u64) -> TableIter<Self> {
        Self::filter(|row| row.team_right == team_right)
    }
    #[allow(unused)]
    pub fn filter_by_result(result: BattleResult) -> TableIter<Self> {
        Self::filter(|row| row.result == result)
    }
}
