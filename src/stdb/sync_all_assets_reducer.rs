// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#![allow(unused_imports)]
use super::global_settings::GlobalSettings;
use super::t_ability::TAbility;
use super::t_base_unit::TBaseUnit;
use super::t_house::THouse;
use super::t_representation::TRepresentation;
use super::t_status::TStatus;
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct SyncAllAssetsArgs {
    pub gs: GlobalSettings,
    pub representations: Vec<TRepresentation>,
    pub units: Vec<TBaseUnit>,
    pub houses: Vec<THouse>,
    pub abilities: Vec<TAbility>,
    pub statuses: Vec<TStatus>,
}

impl Reducer for SyncAllAssetsArgs {
    const REDUCER_NAME: &'static str = "sync_all_assets";
}

#[allow(unused)]
pub fn sync_all_assets(
    gs: GlobalSettings,
    representations: Vec<TRepresentation>,
    units: Vec<TBaseUnit>,
    houses: Vec<THouse>,
    abilities: Vec<TAbility>,
    statuses: Vec<TStatus>,
) {
    SyncAllAssetsArgs {
        gs,
        representations,
        units,
        houses,
        abilities,
        statuses,
    }
    .invoke();
}

#[allow(unused)]
pub fn on_sync_all_assets(
    mut __callback: impl FnMut(
            &Identity,
            Option<Address>,
            &Status,
            &GlobalSettings,
            &Vec<TRepresentation>,
            &Vec<TBaseUnit>,
            &Vec<THouse>,
            &Vec<TAbility>,
            &Vec<TStatus>,
        ) + Send
        + 'static,
) -> ReducerCallbackId<SyncAllAssetsArgs> {
    SyncAllAssetsArgs::on_reducer(move |__identity, __addr, __status, __args| {
        let SyncAllAssetsArgs {
            gs,
            representations,
            units,
            houses,
            abilities,
            statuses,
        } = __args;
        __callback(
            __identity,
            __addr,
            __status,
            gs,
            representations,
            units,
            houses,
            abilities,
            statuses,
        );
    })
}

#[allow(unused)]
pub fn once_on_sync_all_assets(
    __callback: impl FnOnce(
            &Identity,
            Option<Address>,
            &Status,
            &GlobalSettings,
            &Vec<TRepresentation>,
            &Vec<TBaseUnit>,
            &Vec<THouse>,
            &Vec<TAbility>,
            &Vec<TStatus>,
        ) + Send
        + 'static,
) -> ReducerCallbackId<SyncAllAssetsArgs> {
    SyncAllAssetsArgs::once_on_reducer(move |__identity, __addr, __status, __args| {
        let SyncAllAssetsArgs {
            gs,
            representations,
            units,
            houses,
            abilities,
            statuses,
        } = __args;
        __callback(
            __identity,
            __addr,
            __status,
            gs,
            representations,
            units,
            houses,
            abilities,
            statuses,
        );
    })
}

#[allow(unused)]
pub fn remove_on_sync_all_assets(id: ReducerCallbackId<SyncAllAssetsArgs>) {
    SyncAllAssetsArgs::remove_on_reducer(id);
}
