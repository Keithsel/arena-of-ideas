// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#![allow(unused_imports)]
use super::t_arena_leaderboard::TArenaLeaderboard;
use super::t_lootbox_item::TLootboxItem;
use super::t_team::TTeam;
use super::t_unit_item::TUnitItem;
use super::t_unit_shard_item::TUnitShardItem;
use super::t_user::TUser;
use super::t_wallet::TWallet;
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address, ScheduleAt,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct UploadGameArchiveArgs {
    pub next_id: u64,
    pub users: Vec<TUser>,
    pub arena_leaderboard: Vec<TArenaLeaderboard>,
    pub teams: Vec<TTeam>,
    pub wallets: Vec<TWallet>,
    pub unit_items: Vec<TUnitItem>,
    pub unit_shards: Vec<TUnitShardItem>,
    pub lootboxes: Vec<TLootboxItem>,
}

impl Reducer for UploadGameArchiveArgs {
    const REDUCER_NAME: &'static str = "upload_game_archive";
}

#[allow(unused)]
pub fn upload_game_archive(
    next_id: u64,
    users: Vec<TUser>,
    arena_leaderboard: Vec<TArenaLeaderboard>,
    teams: Vec<TTeam>,
    wallets: Vec<TWallet>,
    unit_items: Vec<TUnitItem>,
    unit_shards: Vec<TUnitShardItem>,
    lootboxes: Vec<TLootboxItem>,
) {
    UploadGameArchiveArgs {
        next_id,
        users,
        arena_leaderboard,
        teams,
        wallets,
        unit_items,
        unit_shards,
        lootboxes,
    }
    .invoke();
}

#[allow(unused)]
pub fn on_upload_game_archive(
    mut __callback: impl FnMut(
            &Identity,
            Option<Address>,
            &Status,
            &u64,
            &Vec<TUser>,
            &Vec<TArenaLeaderboard>,
            &Vec<TTeam>,
            &Vec<TWallet>,
            &Vec<TUnitItem>,
            &Vec<TUnitShardItem>,
            &Vec<TLootboxItem>,
        ) + Send
        + 'static,
) -> ReducerCallbackId<UploadGameArchiveArgs> {
    UploadGameArchiveArgs::on_reducer(move |__identity, __addr, __status, __args| {
        let UploadGameArchiveArgs {
            next_id,
            users,
            arena_leaderboard,
            teams,
            wallets,
            unit_items,
            unit_shards,
            lootboxes,
        } = __args;
        __callback(
            __identity,
            __addr,
            __status,
            next_id,
            users,
            arena_leaderboard,
            teams,
            wallets,
            unit_items,
            unit_shards,
            lootboxes,
        );
    })
}

#[allow(unused)]
pub fn once_on_upload_game_archive(
    __callback: impl FnOnce(
            &Identity,
            Option<Address>,
            &Status,
            &u64,
            &Vec<TUser>,
            &Vec<TArenaLeaderboard>,
            &Vec<TTeam>,
            &Vec<TWallet>,
            &Vec<TUnitItem>,
            &Vec<TUnitShardItem>,
            &Vec<TLootboxItem>,
        ) + Send
        + 'static,
) -> ReducerCallbackId<UploadGameArchiveArgs> {
    UploadGameArchiveArgs::once_on_reducer(move |__identity, __addr, __status, __args| {
        let UploadGameArchiveArgs {
            next_id,
            users,
            arena_leaderboard,
            teams,
            wallets,
            unit_items,
            unit_shards,
            lootboxes,
        } = __args;
        __callback(
            __identity,
            __addr,
            __status,
            next_id,
            users,
            arena_leaderboard,
            teams,
            wallets,
            unit_items,
            unit_shards,
            lootboxes,
        );
    })
}

#[allow(unused)]
pub fn remove_on_upload_game_archive(id: ReducerCallbackId<UploadGameArchiveArgs>) {
    UploadGameArchiveArgs::remove_on_reducer(id);
}
