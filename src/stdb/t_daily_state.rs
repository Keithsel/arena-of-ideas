// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#![allow(unused_imports)]
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address, ScheduleAt,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct TDailyState {
    pub owner: u64,
    pub ranked_cost: i64,
    pub const_cost: i64,
    pub quests_taken: u32,
}

impl TableType for TDailyState {
    const TABLE_NAME: &'static str = "TDailyState";
    type ReducerEvent = super::ReducerEvent;
}

impl TableWithPrimaryKey for TDailyState {
    type PrimaryKey = u64;
    fn primary_key(&self) -> &Self::PrimaryKey {
        &self.owner
    }
}

impl TDailyState {
    #[allow(unused)]
    pub fn filter_by_owner(owner: u64) -> TableIter<Self> {
        Self::filter(|row| row.owner == owner)
    }
    #[allow(unused)]
    pub fn find_by_owner(owner: u64) -> Option<Self> {
        Self::find(|row| row.owner == owner)
    }
    #[allow(unused)]
    pub fn filter_by_ranked_cost(ranked_cost: i64) -> TableIter<Self> {
        Self::filter(|row| row.ranked_cost == ranked_cost)
    }
    #[allow(unused)]
    pub fn filter_by_const_cost(const_cost: i64) -> TableIter<Self> {
        Self::filter(|row| row.const_cost == const_cost)
    }
    #[allow(unused)]
    pub fn filter_by_quests_taken(quests_taken: u32) -> TableIter<Self> {
        Self::filter(|row| row.quests_taken == quests_taken)
    }
}
