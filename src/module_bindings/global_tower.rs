// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

use super::tower_floor::TowerFloor;
#[allow(unused)]
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct GlobalTower {
    pub number: u64,
    pub owner: Option<u64>,
    pub floor: TowerFloor,
}

impl TableType for GlobalTower {
    const TABLE_NAME: &'static str = "GlobalTower";
    type ReducerEvent = super::ReducerEvent;
}

impl TableWithPrimaryKey for GlobalTower {
    type PrimaryKey = u64;
    fn primary_key(&self) -> &Self::PrimaryKey {
        &self.number
    }
}

impl GlobalTower {
    #[allow(unused)]
    pub fn filter_by_number(number: u64) -> Option<Self> {
        Self::find(|row| row.number == number)
    }
    #[allow(unused)]
    pub fn filter_by_owner(owner: Option<u64>) -> TableIter<Self> {
        Self::filter(|row| row.owner == owner)
    }
    #[allow(unused)]
    pub fn filter_by_floor(floor: TowerFloor) -> TableIter<Self> {
        Self::filter(|row| row.floor == floor)
    }
}
