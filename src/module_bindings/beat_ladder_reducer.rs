// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#[allow(unused)]
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct BeatLadderArgs {
    pub ladder_id: u64,
    pub levels: Vec<String>,
    pub owner_team: String,
}

impl Reducer for BeatLadderArgs {
    const REDUCER_NAME: &'static str = "beat_ladder";
}

#[allow(unused)]
pub fn beat_ladder(ladder_id: u64, levels: Vec<String>, owner_team: String) {
    BeatLadderArgs {
        ladder_id,
        levels,
        owner_team,
    }
    .invoke();
}

#[allow(unused)]
pub fn on_beat_ladder(
    mut __callback: impl FnMut(&Identity, Option<Address>, &Status, &u64, &Vec<String>, &String)
        + Send
        + 'static,
) -> ReducerCallbackId<BeatLadderArgs> {
    BeatLadderArgs::on_reducer(move |__identity, __addr, __status, __args| {
        let BeatLadderArgs {
            ladder_id,
            levels,
            owner_team,
        } = __args;
        __callback(__identity, __addr, __status, ladder_id, levels, owner_team);
    })
}

#[allow(unused)]
pub fn once_on_beat_ladder(
    __callback: impl FnOnce(&Identity, Option<Address>, &Status, &u64, &Vec<String>, &String)
        + Send
        + 'static,
) -> ReducerCallbackId<BeatLadderArgs> {
    BeatLadderArgs::once_on_reducer(move |__identity, __addr, __status, __args| {
        let BeatLadderArgs {
            ladder_id,
            levels,
            owner_team,
        } = __args;
        __callback(__identity, __addr, __status, ladder_id, levels, owner_team);
    })
}

#[allow(unused)]
pub fn remove_on_beat_ladder(id: ReducerCallbackId<BeatLadderArgs>) {
    BeatLadderArgs::remove_on_reducer(id);
}
