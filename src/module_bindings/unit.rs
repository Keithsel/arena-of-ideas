// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

use super::unit_pool::UnitPool;
#[allow(unused)]
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct Unit {
    pub name: String,
    pub data: String,
    pub pool: UnitPool,
}

impl TableType for Unit {
    const TABLE_NAME: &'static str = "Unit";
    type ReducerEvent = super::ReducerEvent;
}

impl TableWithPrimaryKey for Unit {
    type PrimaryKey = String;
    fn primary_key(&self) -> &Self::PrimaryKey {
        &self.name
    }
}

impl Unit {
    #[allow(unused)]
    pub fn filter_by_name(name: String) -> Option<Self> {
        Self::find(|row| row.name == name)
    }
    #[allow(unused)]
    pub fn filter_by_data(data: String) -> TableIter<Self> {
        Self::filter(|row| row.data == data)
    }
    #[allow(unused)]
    pub fn filter_by_pool(pool: UnitPool) -> TableIter<Self> {
        Self::filter(|row| row.pool == pool)
    }
}
