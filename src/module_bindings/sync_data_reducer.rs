// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

use super::ability::Ability;
use super::house::House;
use super::statuses::Statuses;
use super::summon::Summon;
use super::table_unit::TableUnit;
use super::vfx::Vfx;
#[allow(unused)]
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct SyncDataArgs {
    pub houses: Vec<House>,
    pub abilities: Vec<Ability>,
    pub statuses: Vec<Statuses>,
    pub summons: Vec<Summon>,
    pub units: Vec<TableUnit>,
    pub vfxs: Vec<Vfx>,
}

impl Reducer for SyncDataArgs {
    const REDUCER_NAME: &'static str = "sync_data";
}

#[allow(unused)]
pub fn sync_data(
    houses: Vec<House>,
    abilities: Vec<Ability>,
    statuses: Vec<Statuses>,
    summons: Vec<Summon>,
    units: Vec<TableUnit>,
    vfxs: Vec<Vfx>,
) {
    SyncDataArgs {
        houses,
        abilities,
        statuses,
        summons,
        units,
        vfxs,
    }
    .invoke();
}

#[allow(unused)]
pub fn on_sync_data(
    mut __callback: impl FnMut(
            &Identity,
            Option<Address>,
            &Status,
            &Vec<House>,
            &Vec<Ability>,
            &Vec<Statuses>,
            &Vec<Summon>,
            &Vec<TableUnit>,
            &Vec<Vfx>,
        ) + Send
        + 'static,
) -> ReducerCallbackId<SyncDataArgs> {
    SyncDataArgs::on_reducer(move |__identity, __addr, __status, __args| {
        let SyncDataArgs {
            houses,
            abilities,
            statuses,
            summons,
            units,
            vfxs,
        } = __args;
        __callback(
            __identity, __addr, __status, houses, abilities, statuses, summons, units, vfxs,
        );
    })
}

#[allow(unused)]
pub fn once_on_sync_data(
    __callback: impl FnOnce(
            &Identity,
            Option<Address>,
            &Status,
            &Vec<House>,
            &Vec<Ability>,
            &Vec<Statuses>,
            &Vec<Summon>,
            &Vec<TableUnit>,
            &Vec<Vfx>,
        ) + Send
        + 'static,
) -> ReducerCallbackId<SyncDataArgs> {
    SyncDataArgs::once_on_reducer(move |__identity, __addr, __status, __args| {
        let SyncDataArgs {
            houses,
            abilities,
            statuses,
            summons,
            units,
            vfxs,
        } = __args;
        __callback(
            __identity, __addr, __status, houses, abilities, statuses, summons, units, vfxs,
        );
    })
}

#[allow(unused)]
pub fn remove_on_sync_data(id: ReducerCallbackId<SyncDataArgs>) {
    SyncDataArgs::remove_on_reducer(id);
}
