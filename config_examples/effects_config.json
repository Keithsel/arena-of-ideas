[
	{// дефолтная атака ближнего боя
		"triggers": {"OnAttack"},
		"damage": "attack_damage", // если переменная damage не задана, берем значение атаки юнита
		"OnAttack":
		[
			"setStat(target,'hp',-damage)"
		]
	},


	{// дефолтная атака дальнего боя
		"triggers": ["OnAttack", "OnProjectileReach"],
		"OnAttack":
		[
			"doEffect('LaunchProjectile_effect')"
		],
		"OnProjectileReach":
		[
			"setStat(target,'hp',-damage)"
		]
	},
	{// запуск снаряда
		"name": "LaunchProjectile_effect", // эффект с имененм можно вызывать из других эффектов
		"routine":
		[
			"launchProjectile(master,target,projectile_speed)"
		]
	},


	{// заморозка цели
		"name": "Freeze_status",
		"type": "status", // у статусов всегда есть имя и привязка к юниту owner
		"triggers": ["OnStatusApply", "OnStatusRemove", "OnTakeDamage"],
		"OnStatusApply":
		[
			"addFlag(owner,'UnitFlag.CantAttack')",
			"addFlag(owner,'UnitFlag.CantMove')",
		],
		"OnStatusRemove":
		[
			"removeFlag(owner,'UnitFlag.CantAttack')",
			"removeFlag(owner,'UnitFlag.CantMove')",
		],
		"OnTakeDamage":
		[
			"if damage > 0 then removeStatus(target,'Freeze_status')"
		]
	},
	{// заморозка после атаки
		"triggers": ["AfterAttack"],
		"AfterAttack":
		[
			"addStatus(target,'Freeze_status')"
		]
	},


	{// воскрешение цели с половиной хп после убийства с шансом 10%
		"triggers": ["OnKill"],
		"OnKill": 
		[
			"if chance(90) then return()",
			"revive(target)",
			"half_hp = target.max_hp / 2",
			"setStat(target,'hp',-half_hp)",
			"setStat(target,'faction','player')"
		]
	},


	{// DoT статус
		"name": "Dot_status",
		"type": "status",
		"duration": 10, // дефолтное значение если переменная не была проставлена выше по стеку
		"trigger_every": 2,
		"damage": "attack_damage",
		"triggers": 
		{
			"TimeTrigger":
			{
				"duration": "duration",
				"trigger_every": "trigger_every",
			}
		},
		"TimeTrigger":
		[
			"setStat(owner,'hp',-damage)"
		],
	},


	{// аура дающая +20% скорости атаки
		"name": "AttackSpeed_aura",
		"type": "aura",
		"radius": 10,// обязательная переменная для всех аур
		"triggers": ["UnitEnterAura", "UnitExitAura"],
		"UnitEnterAura":
		[
			"applyStats(target,'AttackSpeed_status')"
		],
		"UnitExitAura":
		[
			"removeStatus(target,'AttackSpeed_status')"
		]
	},
	{// бафф на скорость атаки
		"name": "AttackSpeed_status",
		"triggers": ["OnStatusApply", "OnStatusRemove"],
		"OnStatusApply": 
		[
			"addStatMod(target,'attack_speed',1.2)" // при каждом взятии переменной attack_speed к значению будет применяться указанный множитель
		],
		"OnStatusRemove":
		[
			"removeStatMod(target,'attack_speed',1.2)"
		]
	}


	{// аура которая лечит союзников на 1 каждые 5 секунд
		"name": "Healing_aura",
		"type": "aura",
		"radius": 10,
		"triggers": {"TimeTrigger": {"trigger_every": 5}},
		"TimeTrigger":
		[
			"units_in_aura = getUnitsInArea(owner.position,radius,'Ally')",
			"setStat(units_in_aura,'hp',+1)"
		]
	}


	{// эффект цепной молнии: наносит урон юнитам по цепочке прыгая 3 раза и уменьшая урон на 20% с каждым прыжком
		"name": "ChainLightning_effect",
		"new_target_radius": 5,
		"triggers": {"CountTrigger":{"max_count": 3, "incr_delay": 0.2}},
		"CountTrigger": 
		[
			"target = getUnitsInArea(target.position,new_target_radius,target.faction,1,'exceptTarget')"// ищет одну новую цель рядом с предыдущей
			"if empty(target) then return()",
			"damage = attack_damage - (attack_damage * count * 0.2)",
			"setStat(target,'hp',-damage)",
		]
	},
	{// ChainLightning при атаке
		"triggers": ["OnAttack"],
		"OnAttack":
		[
			"doEffect('ChainLightning_effect')"
		]
	},


	{// при убийстве запуск Projectile который лечит союзника на % макс хп убитого
		"triggers": ["OnKill", "OnProjectileReach"],
		"OnKill":
		[
			"heal_amount = target.max_hp / 2",
			"target = getUnitsInArea(target.position,20,master.faction,1,'mostMissingHp')"
			"doEffect('LaunchProjectile_effect')",
		],
		"OnProjectileReach":
		[
			"setStat(target,'hp',+heal_amount)"
		]
	},


	{// статус дающий шанс увеличения урона атаки; по дефолту 15% увеличение x3
		"name": "Crit",
		"type": "status",
		"crit_chance": 0.15,
		"crit_mult": 3,
		"triggers": ["BeforeAttack"],
		"BeforeAttack":
		[
			"if chance(crit_chance) then damage = damage * crit_mult"
		]
	}
]